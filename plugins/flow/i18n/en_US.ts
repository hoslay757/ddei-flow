export default {
  ddei: {
    flow: {
      startevent: 'Start',
      endevent: 'End',
      boundaryevent: 'Bound',
      intermediatecatchevent: 'InCatch',
      intermediatethrowevent: 'InThrow',
      time: 'Time',
      timeduration: 'During',
      timecron: 'CRON',
      errorcode: 'ECode',
      condition: 'Cond',
      
      conditionexpress: 'Cond Express',
      startnode: 'Start',
      exchange: 'Exchange',
      endnode: 'End',
      overview: 'Overview',
      unlimited: 'Unlimited',
      ordering: 'Ordering',
      loop: 'Loop',
      message: 'Message',
      messagename: 'Message Name',
      signal: 'Signal',
      signalname: 'Signal Name',
      multiins: 'Multi Instance',
      insnum: 'InsNum',
      parallel:"Parallel",
      notInterrupting: 'No Interrupt',
      compensation: 'Compensation',
      datacoll: 'Data Collection',
      busicls: 'Class',
      dataobj: 'DataObj',
      datastore: 'DataStore',
      user: 'User',

      complexgateway: 'Complex',
      parallelgateway: 'Parallel',
      exclusivegateway: 'Exclusive',
      inclusivegateway: 'Inclusive',
      eventbasedgateway: 'Event',

      group: 'Group',
      branch: 'Branch',
      script: 'Script',
      sequence: 'Sequence',
      task:'Task',
      usertask: 'User',
      servicetask: 'Service',
      sendtask: 'Send',
      scripttask: 'Script',
      receivetask: 'Receive',
      manualtask: 'Manual',
      choretask: 'Chore',
      subprocess: 'SubProc',
      eventsubprocess: 'Event SubProcess',
      transsubprocess: 'Transaction',
      choresubprocess: 'ChoreProc',
      calltask: 'Call',
      busitask: 'BusiRule',
      loading: 'Loading',
      property: {
        notInterrupting: 'No Interrupt',
        dataType:'DataType',
        capacity:"Capacity",
        language: 'Script Language',
        script: 'Script',
        humanperformer: 'Performer',
        potentialowner: 'Potential',
        sender: 'Sender',
        receiver: 'Receiver',
        custom: 'Custom',
        ds: {
          timedate: 'TimeDate',
          timeduration: 'Duration',
          timecron: 'CRON',
          timer: "Timer",
          message: 'Message',
          signal: 'Signal',
          link: 'Link',
          parallel: 'Parallel',
          multiple: 'Multiple',
          compensation: 'Compensation',
          default: 'Default',
          error: 'Error',
          escalation: 'Escalation',
          condition: 'Condition',
          defaultcondition: 'Default Condition',
          association: 'Association',
          cancel: 'Cancel',
          stop: 'Stop',
          input: 'Input',
          output: 'Output',
          string: 'String',
          integer: 'Integer',
          long: 'Long',
          float: 'Float',
          double: 'Double',
          boolean: 'Boolean',
          datetime: 'DateTime',
          custom: 'Custom',
          noninit: 'Non-Init',
          event: 'Event',
          transaction: 'Transaction',
        }
      },
      groups: {
        bpmn: "BPMN",
        bpmndesc: "The process shape defined by the BPMN standard is used to draw standard workflows such as Activiti and JBPM"
      }
    }
  }
};